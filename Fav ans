
ts


import { Component, OnInit } from '@angular/core';
import { DestinationService } from '../services/destination.service';

@Component({
  selector: 'app-destination-list',
  templateUrl: './destination-list.component.html',
  styleUrls: ['./destination-list.component.css']
})
export class DestinationListComponent implements OnInit {
  
  destinations: any[] = [];
  favorites: any[] = [];
  searchQuery: string = ''; 
  isSearchStarted: boolean = false;
  filteredDestinations: any[] = [];
  userId: string | null = null;

  constructor(private destinationService: DestinationService) {}

  ngOnInit(): void {
    this.loadDestinations();
    this.loadFavorites();
    this.checkLoginStatus();
  }

  checkLoginStatus() {
    const userData = localStorage.getItem('user');
    if (userData) {
      this.userId = JSON.parse(userData).id;
    }
  }

  loadDestinations() {
    this.destinationService.getDestinations().subscribe(
      (data: any) => {
        this.destinations = data;
      },
      (error) => {
        console.error('Error fetching destinations:', error);
      }
    );
  }

  loadFavorites() {
    this.destinationService.getFavorites().subscribe(
      (data: any) => {
        this.favorites = data;
      },
      (error) => {
        console.error('Error fetching favorites:', error);
      }
    );
  }

  isFavorite(destinationId: string): boolean {
    return this.favorites.some(fav => fav.id === destinationId);
  }

  addToFavorites(destination: any) {
    if (!this.userId) {
      alert('Please log in to add favorites');
      return;
    }

    if (this.isFavorite(destination.id)) {
      alert('Already in favorites!');
      return;
    }

    const favorite = { id: destination.id, name: destination.name };
    
    this.destinationService.addToFavorites(favorite).subscribe(
      () => {
        this.favorites.push(favorite);
        alert('Added to favorites successfully!');
      },
      (error) => {
        console.error('Error adding to favorites:', error);
        alert('Error adding to favorites.');
      }
    );
  }

  onSearch(): void {
    if (this.searchQuery.trim()) {
      this.isSearchStarted = true;
      this.filteredDestinations = this.destinations.filter(destination =>
        destination.name.toLowerCase().includes(this.searchQuery.toLowerCase())
      );
    } else {
      this.isSearchStarted = false;
      this.filteredDestinations = [];
    }
  }
}


html 


<div class="destination-cards" style="margin-top: 50px;">
  <div *ngFor="let destination of filteredDestinations.length ? filteredDestinations : destinations" class="destination-card">
    
    <div class="card-body">
      <h3>{{ destination.name }}</h3>
      <p>{{ destination.description }}</p>
      
      <a [routerLink]="['/destinations', destination.id]" class="btn btn-info btn-sm mb-2"> View Details</a>  
      <br>

      <button 
        class="btn btn-info btn-sm mb-2" 
        (click)="addToFavorites(destination)" 
        [disabled]="isFavorite(destination.id)" 
        style="width: 300px;">
        {{ isFavorite(destination.id) ? 'Added to Favorites' : 'Add To Favorites' }}
      </button>

    </div>
  </div>
</div>


service 


import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root',
})
export class DestinationService {
  private apiUrl = 'http://localhost:3000/destinations';
  private favoritesUrl = 'http://localhost:3000/favorites';

  constructor(private http: HttpClient) {}

  getDestinations(): Observable<any[]> {
    return this.http.get<any[]>(this.apiUrl);
  }

  getFavorites(): Observable<any[]> {
    return this.http.get<any[]>(this.favoritesUrl);
  }

  addToFavorites(destination: any): Observable<any> {
    return this.http.post(this.favoritesUrl, destination);
  }
}



